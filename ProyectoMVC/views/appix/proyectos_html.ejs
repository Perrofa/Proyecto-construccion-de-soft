<!DOCTYPE html>
<html lang="en">
  <%- include('./../head.ejs') %>
  <body>
    <%- include('./../header.ejs') %>

    <main class="d-flex flex-nowrap">
      <%- include('./../sidebar.ejs') %>

      <!-- Cuadros de proyectos -->
      <div class="container">
        <div class="container px-4 py-5" id="custom-cards">
          <h2 class="pb-2 border-bottom">Proyectos</h2>
      
          <div class="row row-cols-1 row-cols-lg-3 align-items-stretch g-4 py-5" id="grid">
            <!-- Project cards will be injected here -->
          </div>

          <!-- Pagination Controls -->
          <nav id="paginationControls" style="display: none;">
            <ul class="pagination justify-content-center">
              <li class="page-item">
                <button class="page-link" id="prevPage" disabled>Anterior</button>
              </li>
              <li class="page-item">
                <span class="page-link" id="pageIndicator">1</span>
              </li>
              <li class="page-item">
                <button class="page-link" id="nextPage">Siguiente</button>
              </li>
            </ul>
          </nav>
        </div>
      </div>
    </main>

    <div class="container">
      <%- include('./../footer.ejs') %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <%- include('./../script.ejs') %>

    <script>
      document.addEventListener('DOMContentLoaded', async () => {
        const url = '/proyectos/proyectos';
        const res = await fetch(url, {
          method: 'GET',
          headers: { 'Content-Type': 'application/json' }
        });

        const projectsPerPage = 9;
        let currentPage = 1;
        let totalPages = 1;

        function formatearFecha(fecha) {
          return new Date(fecha).toLocaleDateString('es-MX', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          });
        }

        function renderProjects(projects) {
          const grid = projects.map(proyecto => `
            <div class="col">
              <div class="card card-cover h-100 overflow-hidden text-bg-dark rounded-4 shadow-lg" style="background-color: rgba(0, 50, 200, 1) !important;">
                <div class="d-flex flex-column h-100 p-5 pb-3 text-white text-shadow-1">
                  <h1>${proyecto.NomProyecto}</h1>
                  <h6>Descripcion:</h6>
                  <p>${proyecto.DescProyecto}</p>
                  <ul class="d-flex list-unstyled mt-auto">
                    <li class="d-flex align-items-center me-3">
                      <svg class="bi me-2" width="1em" height="1em"><use xlink:href="#geo-fill"></use></svg>
                      <small>${formatearFecha(proyecto.FFinalProyecto)}</small>
                    </li>
                    <li class="d-flex align-items-center">
                      <svg class="bi me-2" width="1em" height="1em"><use xlink:href="#calendar3"></use></svg>
                      <small>${formatearFecha(proyecto.FInicioProyecto)}</small>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          `).join('');

          document.getElementById('grid').innerHTML = grid;
        }

        function updatePaginationControls() {
          document.getElementById('prevPage').disabled = currentPage === 1;
          document.getElementById('nextPage').disabled = currentPage === totalPages;
          document.getElementById('pageIndicator').textContent = currentPage;
        }

        function handlePageChange(newPage) {
          currentPage = newPage;
          const start = (currentPage - 1) * projectsPerPage;
          const end = start + projectsPerPage;
          renderProjects(allProjects.slice(start, end));
          updatePaginationControls();
        }

        if (res.ok) {
          const data = await res.json();
          const allProjects = data.proyectos;
          totalPages = Math.ceil(allProjects.length / projectsPerPage);

          // Only show pagination controls if there are more than 9 projects
          if (allProjects.length > projectsPerPage) {
            document.getElementById('paginationControls').style.display = 'block';
          }

          handlePageChange(1); // Initial render of the first page

          document.getElementById('prevPage').addEventListener('click', () => {
            if (currentPage > 1) handlePageChange(currentPage - 1);
          });

          document.getElementById('nextPage').addEventListener('click', () => {
            if (currentPage < totalPages) handlePageChange(currentPage + 1);
          });
        }
      });

      var elemento = document.getElementById('proyectos-link');
      elemento.className = 'nav-link active';
    </script>
  </body>
</html>
